name: Industrialisation continue sur le serveur Alwaysdata

on: push

jobs:
  Connexion:
    runs-on: ubuntu-latest
    steps:
      - name: Connexion SSH avec le serveur (test)
        uses: appleboy/ssh-action@master
        with:
          host: "ssh-${{ secrets.USERNAME }}.alwaysdata.net"
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            echo "Connexion établie avec succès sur Alwaysdata"
            mkdir -p $HOME/www/temp_cicd

  Copy:
    needs: Connexion
    runs-on: ubuntu-latest
    steps:
      - name: Checkout du dépôt GitHub
        uses: actions/checkout@v3

      - name: Envoi du code vers Alwaysdata
        uses: appleboy/scp-action@master
        with:
          host: "ssh-${{ secrets.USERNAME }}.alwaysdata.net"
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          source: "./"
          target: "$HOME/www/temp_cicd"

      - name: Déplacement dans le bon dossier
        uses: appleboy/ssh-action@master
        with:
          host: "ssh-${{ secrets.USERNAME }}.alwaysdata.net"
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            if [ -d "$HOME/www/flask" ]; then
              rsync -a --delete $HOME/www/temp_cicd/ $HOME/www/flask/
              rm -rf $HOME/www/temp_cicd
              echo "Code mis à jour dans le dossier flask/"
            else
              echo "Le dossier flask n'existe pas sur Alwaysdata"
              exit 1
            fi

  Restart:
    needs: Copy
    runs-on: ubuntu-latest
    steps:
      - name: Restart Alwaysdata site
        run: |
          response_code=$(curl -s -o /dev/null -w "%{http_code}" -X POST --basic --user "${{ secrets.ALWAYSDATA_TOKEN }}:" https://api.alwaysdata.com/v1/site/${{ secrets.ALWAYSDATA_SITE_ID }}/restart/)
          if [ "$response_code" -eq 204 ]; then
            echo "Relance réussie ✅"
          elif [ "$response_code" -eq 404 ]; then
            echo "❌ ALWAYSDATA_SITE_ID incorrect"
            exit 1
          elif [ "$response_code" -eq 401 ]; then
            echo "❌ ALWAYSDATA_TOKEN incorrect"
            exit 1
          else
            echo "Échec du redémarrage (code HTTP : $response_code)"
            exit 1
          fi
